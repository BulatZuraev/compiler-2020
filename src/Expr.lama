-- Expression evaluator

import List;
import State;


-- The evaluator itself: takes a state and an expression,
-- returns integer value
public fun evalExpr (st, expr) {
  case expr of
    Const (const) -> const
  | Var (var) -> st (var)
  | Binop (op, expr1, expr2) -> applyBinop (op, evalExpr (st, expr1), evalExpr (st, expr2))
  esac
}

public fun applyBinop (op, a, b) {
  case op of
    "+" -> a + b
  | "-" -> a - b
  | "*" -> a * b
  | "/" -> a / b
  | "%" -> a % b
  | "==" -> a == b
  | "!=" -> a != b
  | "<" -> a < b
  | "<=" -> a <= b
  | ">" -> a > b
  | ">=" -> a >= b
  | "&&" -> a && b
  | "!!" -> a !! b
  esac
}
